library(Rcmdr)
a <- lm(table$X40.YD ~ table$BMI)
summary(lm(table$X40.YD ~ table$BMI))
plot(a)
qnorm
?qnorn
?qnorm
dbinom(58,100,0.5)
dbinom(57,100,0.5)
dbinom(58,100,0.55)
qbinom(0.95,100,0.5)
install.packages("ezknitr")
library(ezknitr)
knitr::opts_chunk$set(echo = TRUE)
### marathon<- read.csv2(url("https://raw.github.ubc.ca/ubc-mds-2017/DSCI_561_regr-1_students/master/labs/lab1/marathonfull.csv?token=AAABq9we9fAMiJLK7llJNQ_HJdEzxn2Pks5aHw4NwA%3D%3D"), header=TRUE, sep=",")
library(tidyverse)
marathon_ful<- marathon %>%
filter(cohort1 == 1) %>%
select(c(age, bmi, female, footwear, group, injury, mf_d, mf_di, mf_ti,  max, sprint, tempo))%>% mutate(mf_s = mf_d/mf_ti)
marathon<- read.csv2(url("https://raw.github.ubc.ca/ubc-mds-2017/DSCI_561_regr-1_students/master/labs/lab1/marathonfull.csv?token=AAABq9we9fAMiJLK7llJNQ_HJdEzxn2Pks5aHw4NwA%3D%3D"), header=TRUE, sep=",")
library(tidyverse)
marathon_ful<- marathon %>%
filter(cohort1 == 1) %>%
select(c(age, bmi, female, footwear, group, injury, mf_d, mf_di, mf_ti,  max, sprint, tempo))%>% mutate(mf_s = mf_d/mf_ti)
View(marathon_ful)
library(ggplot2)
library(tidyverse)
marathon<- read.csv2(url("https://raw.github.ubc.ca/ubc-mds-2017/DSCI_561_regr-1_students/master/labs/lab1/marathonfull.csv?token=AAABq9we9fAMiJLK7llJNQ_HJdEzxn2Pks5aHw4NwA%3D%3D"), header=TRUE, sep=",")
library(tidyverse)
marathon_ful<- marathon %>%
filter(cohort1 == 1) %>%
select(c(age, bmi, female, footwear, group, injury, mf_d, mf_di, mf_ti,  max, sprint, tempo))%>% mutate(mf_s = mf_d/mf_ti)
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = tempo, group=tempo)) +
stat_summary(fun.y = mean, geom = "point", size=2) +
stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
stat_summary(fun.y = mean, geom = "point", size=2) +
stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
ggplot(marathon_ful, aes(x = factor(tempo), y = mf_s, color = factor(sprint), group=factor(sprint))) +
stat_summary(fun.y = mean, geom = "point", size=2) +
stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempor))) +
stat_summary(fun.y = mean, geom = "point", size=2) +
stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
stat_summary(fun.y = mean, geom = "point", size=2) +
stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
# stat_summary(fun.y = mean, geom = "point", size=2) +
# stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
gemo_point()+
gemo_line()
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
geom_point()+
geom_line()
# stat_summary(fun.y = mean, geom = "point", size=2) +
# stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
?stat_summary
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
geom_point()+
geom_line()+
# stat_summary(fun.y = mean, geom = "point", size=2) +
# stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
geom_line()+
# stat_summary(fun.y = mean, geom = "point", size=2) +
# stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
gemo_point()+
geom_line()+
# stat_summary(fun.y = mean, geom = "point", size=2) +
# stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
geom_point()+
geom_line()+
# stat_summary(fun.y = mean, geom = "point", size=2) +
# stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
lm1 <- lm(mf_s ~ as.factor(sprint) * as.factor(tempo), data = marathon_ful))
lm1 <- lm(mf_s ~ as.factor(sprint) * as.factor(tempo), data = marathon_ful)
lm1 <- lm(mf_s ~ as.factor(sprint) * as.factor(tempo), data = marathon_ful)
lm1
lm1 <- lm(mf_s ~ as.factor(sprint) * as.factor(tempo), data = marathon_ful)
lm1
summary(lm1)
lm1 <- lm(mf_s ~ as.factor(sprint) * as.factor(tempo), data = marathon_ful)
lm1
summary(lm1)
lm2 <- lm(mf_s ~ as.factor(sprint) + as.factor(tempo), data = marathon_ful)
lm2
summary(lm2)
lm1 <- lm(mf_s ~sprint * tempo, data = marathon_ful)
lm1
summary(lm1)
lm2 <- lm(mf_s ~ as.factor(sprint) + as.factor(tempo), data = marathon_ful)
lm2
summary(lm2)
lm1 <- lm(mf_s ~sprint * tempo, data = marathon_ful)
lm1
summary(lm1)
lm2 <- lm(mf_s ~ sprint +tempo, data = marathon_ful)
lm2
summary(lm2)
lm1 <- lm(mf_s ~as.factor(sprint) * as.factor(tempo), data = marathon_ful)
lm1
summary(lm1)
lm2 <- lm(mf_s ~ sprint +tempo, data = marathon_ful)
lm2
summary(lm2)
ggplot(marathon_ful, aes(y = ms_f, x = max)) + geom_point() + geom_smooth(method='lm')
ggplot(marathon_ful, aes(y = mf_s, x = max)) + geom_point() + geom_smooth(method='lm')
ggplot(marathon_ful, aes(y = mf_s, x = max)) +
scale_x_continuous()+
geom_point() +
geom_smooth(method='lm')
ggplot(marathon_ful, aes(y = mf_s, x = max)) +
geom_point() +
geom_smooth(method='lm')
View(marathon_ful)
str(marathon_ful)
ggplot(marathon_ful, aes(y = mf_s, x = as.integer(max))) +
geom_point()+
geom_smooth(method='lm')
lm3 <- lm(mf_s ~ max, data = marathon_ful)
summary(lm3)
lm3 <- lm(mf_s ~ as.integer(max), data = marathon_ful)
summary(lm3)
ggplot(marathon_ful, aes(y = mf_s, x = as.integer(max))) +
geom_point()
?subset
knitr::opts_chunk$set(error = TRUE, collapse = TRUE, comment = "#>")
library(tidyverse)
# create the iris_sepal_w  data frame
iris_sepal_w <- select(iris, c(Sepal.Width, Species))
# preview data set
head(iris_sepal_w)
summary(iris_sepal_w)
#the dataset `iris_sepal_w` gives the measurements in centimeters of the variable sepal width for 50 flowers from each of 3 species of iris. The species are Iris setosa, versicolor, and virginica.
# perform an ANOVA
ANOVA_result <- aov(Sepal.Width ~ Species, data = iris_sepal_w)
# display results
summary(ANOVA_result)
View(iris_sepal_w)
iris_sepal_w <- select(iris, c(Sepal.Width, Species))
LM_result<- lm(Sepal.Width ~ Species, data = iris_sepal_w)
summary(LM_result)
iris_vers_virg <- filter(iris, Species != "setosa") %>%
select(Sepal.Width, Sepal.Length, Species) %>%
droplevels()
LM_result_4<- lm(Sepal.Width ~ Species*Sepal.Length, data = iris_vers_virg)
summary(LM_result_4)
View(iris_vers_virg)
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
geom_point()+
geom_line()
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
geom_point()+
geom_line()+
geom_jitter()
library(ggplot2)
library(tidyverse)
marathon<- read.csv2(url("https://raw.github.ubc.ca/ubc-mds-2017/DSCI_561_regr-1_students/master/labs/lab1/marathonfull.csv?token=AAABq9we9fAMiJLK7llJNQ_HJdEzxn2Pks5aHw4NwA%3D%3D"), header=TRUE, sep=",")
library(ggplot2)
library(tidyverse)
marathon<- read.csv2("https://raw.github.ubc.ca/ubc-mds-2017/DSCI_561_regr-1_students/master/labs/lab1/marathonfull.csv?token=AAABq9we9fAMiJLK7llJNQ_HJdEzxn2Pks5aHw4NwA%3D%3D", header=TRUE, sep=",")
library(ggplot2)
library(tidyverse)
marathon<- read.csv("https://raw.github.ubc.ca/ubc-mds-2017/DSCI_561_regr-1_students/master/labs/lab1/marathonfull.csv?token=AAABq9we9fAMiJLK7llJNQ_HJdEzxn2Pks5aHw4NwA%3D%3D", header=TRUE, sep=",")
install.packages("RJSONIO")
install.packages("HTTR")
install.packages("httr")
install.packages("httr")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
marathon<- read.csv2("https://raw.github.ubc.ca/ubc-mds-2017/DSCI_561_regr-1_students/master/labs/lab1/marathonfull.csv?token=AAADqAp12hIVOxQZ_10mFNxhkhalhppQks5aKc5YwA%3D%3D", header=TRUE, sep=",")
library(tidyverse)
marathon_ful<- marathon %>%
filter(cohort1 == 1) %>%
select(c(age, bmi, female, footwear, group, injury, mf_d, mf_di, mf_ti,  max, sprint, tempo))%>% mutate(mf_s = mf_d/mf_ti)
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
stat_summary(fun.y = mean, geom = "point", size=2) +
stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
?stat_summary
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
stat_summary(fun.y = mean, geom = "point",size=2) +
stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
stat_summary(fun.y = mean, geom = "point",size=5) +
stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
ggplot(marathon_ful, aes(x = factor(sprint), y = mf_s, color = factor(tempo), group=factor(tempo))) +
stat_summary(fun.y = mean, geom = "point",size=3,colour="black") +
stat_summary(fun.y = mean, geom = "line") +
geom_jitter()
library(ggplot2)
library(tidyverse)
marathon<- read.csv2("https://raw.github.ubc.ca/ubc-mds-2017/DSCI_561_regr-1_students/master/labs/lab1/marathonfull.csv?token=AAADqAp12hIVOxQZ_10mFNxhkhalhppQks5aKc5YwA%3D%3D", header=TRUE, sep=",")
library(tidyverse)
marathon_ful<- marathon %>%
filter(cohort1 == 1) %>%
select(c(age, bmi, female, footwear, group, injury, mf_d, mf_di, mf_ti,  max, sprint, tempo))%>% mutate(mf_s = mf_d/mf_ti)
install.packages("ezkintr")
??ezkintr
install.packages("ezknitr")
library(ezknitr)
library(ezknitr)
library("benchmarkme")
install.packages("benchmarkme")
library(benchmarkme)
.libPaths()
install.packages("ggplot")
install.packages("ggplot2")
install.packages("ezknitr")
library(ezknitr)
.libPaths()
ls
install.packages("ezknitr")
library(ezknitr)
Teams_short <- Teams_1%>%
filter(teamID==c("ARI","ATL","BAL","BOS","CHA","PHI","SDN","SLN","TBA"))
library(Lahman)
library(tidyverse)
library(ggplot2)
library(lme4)
Teams_short <- Teams_1%>%
filter(teamID==c("ARI","ATL","BAL","BOS","CHA","PHI","SDN","SLN","TBA"))
Teams_1 <- Teams%>%
filter(yearID>=1990)
head(Teams_1)
Teams_short <- Teams_1%>%
filter(teamID==c("ARI","ATL","BAL","BOS","CHA","PHI","SDN","SLN","TBA"))
#regression line for lme
lme_1 <- lmer(R~scale(H)+(1 + scale(BB)| teamID), data = Teams_short)
plot(lme_1, R ~ fitted(.) | teamID, abline = c(0,1))
#regression line for linear model
lm <- lm(R~BB,data=Teams_short)
Teams_short%>%
group_by(team )
Teams_short <- Teams_1%>%
filter(teamID==c("ARI","ATL","BAL","BOS","CHA","PHI","SDN","SLN","TBA"))
#regression line for lme
lme_1 <- lmer(R~scale(H)+(1 + scale(BB)| teamID), data = Teams_short)
plot(lme_1, R ~ fitted(.) | teamID, abline = c(0,1))
#regression line for linear model
lm <- lm(R~BB,data=Teams_short)
Teams_short%>%
group_by(teamID)%>%
do(setNames(data.frame(t(coef(lm(R~scale(BB),Teams_short))),c("int","slope"))))
Teams_short <- Teams_1%>%
filter(teamID==c("ARI","ATL","BAL","BOS","CHA","PHI","SDN","SLN","TBA"))
#regression line for lme
lme_1 <- lmer(R~scale(H)+(1 + scale(BB)| teamID), data = Teams_short)
plot(lme_1, R ~ fitted(.) | teamID, abline = c(0,1))
#regression line for linear model
lm <- lm(R~BB,data=Teams_short)
Teams_short%>%
group_by(teamID)%>%
do(setNames(data.frame(t(coef(lm(R~BB,Teams_short))),c("int","slope"))))
shiny::runApp('Downloads/canadian-ufo-sightings-master-2/src/app')
install.packages("leaflet")
runApp('Downloads/canadian-ufo-sightings-master-2/src/app')
runApp('~/Downloads/WineFinder-master')
runApp('Documents/777/UBC/block4/DSCI_532/US_crime/src')
runApp('Documents/777/UBC/block4/DSCI_532/US_crime/src')
year<-levels(crime$year)
crime <- read_csv("../data/ucr_crime_1975_2015.csv")
crime <- read_csv("../data/ucr_crime_1975_2015.csv")
setwd("~/Documents/777/UBC/block4/DSCI_532/US_crime/src")
crime <- read_csv("../data/ucr_crime_1975_2015.csv")
department<-levels(crime$department)
department<-levels(crime$department_name)
department
crime$department_name
unique(crime$department_name)
department<-unique(crime$department_name)
year<-unique(crime$year)
department
year
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
type(crime$year)
crime$year
str(crime)
runApp()
runApp()
?selectizeInput
??selectizeInput
shiny::runApp()
runApp()
runApp()
??tooltip
add_tooltip
??add_tooltip
??ggvis
??ggvis
??add_tooltip
install.packages("ggvis")
?ggvis
??ggvis
library(ggvis)
?add_tooltip()
runApp()
runApp()
install.packages(“plotly)
install.packages("plotly")
library(plotly)
runApp('~/Desktop')
runApp()
runApp()
runApp('~/Desktop')
library(plotly)
library(forcats)
library(scales)
library(plotly)
1
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
train <- read.csv("./data/train.csv")
train <- read.csv(".\data\train.csv")
train <- read.csv("./data/flu_train.csv")
train <- read.csv("./data/flu-train.csv")
test <- read.csv("./data/flu-test.csv")
train%>%
mutate(colour=YEAR=="2009")
train <- read.csv("./data/flu-train.csv")
test <- read.csv("./data/flu-test.csv")
train%>%
mutate(2009=YEAR=="2009")%>%
train <- read.csv("./data/flu-train.csv")
test <- read.csv("./data/flu-test.csv")
train%>%
mutate(colour=YEAR=="2009")%>%
ggplot(train, aes(WEEK,PERCENT_POSITIVES))+
geom_line(aes(color = 2009)) +
labs(x="Week",y="percent positives", title="Training data of Flu")
train <- read.csv("./data/flu-train.csv")
test <- read.csv("./data/flu-test.csv")
train%>%
mutate(colour=YEAR=="2009")%>%
ggplot(aes(WEEK,PERCENT_POSITIVES))+
geom_line(aes(color = 2009)) +
labs(x="Week",y="percent positives", title="Training data of Flu")
train <- read.csv("./data/flu-train.csv")
test <- read.csv("./data/flu-test.csv")
train%>%
mutate(colour=YEAR=="2009")%>%
ggplot(aes(WEEK,PERCENT_POSITIVES))+
geom_line(aes(color = colour)) +
labs(x="Week",y="percent positives", title="Training data of Flu")
train <- read.csv("./data/flu-train.csv")
test <- read.csv("./data/flu-test.csv")
train%>%
mutate(colour=YEAR=="2009")%>%
ggplot(aes(WEEK,PERCENT_POSITIVES))+
geom_line() +
labs(x="Week",y="percent positives", title="Training data of Flu")
train <- read.csv("./data/flu-train.csv")
test <- read.csv("./data/flu-test.csv")
train%>%
mutate(colour=YEAR=="2009")%>%
ggplot(aes(WEEK,PERCENT_POSITIVES))+
geom_line(aes(group=YEAR,color = colour)) +
labs(x="Week",y="percent positives", title="Training data of Flu")
train <- read.csv("./data/flu-train.csv")
test <- read.csv("./data/flu-test.csv")
train%>%
mutate(colour=YEAR=="2009")%>%
ggplot(aes(WEEK,PERCENT_POSITIVES))+
geom_line(aes(group=YEAR,color = colour)) +
labs(x="Week",y="percent positives", title="Training data of Flu",label="2009")
train <- read.csv("./data/flu-train.csv")
test <- read.csv("./data/flu-test.csv")
train%>%
mutate(colour=YEAR=="2009")%>%
ggplot(aes(WEEK,PERCENT_POSITIVES))+
geom_line(aes(group=YEAR,color = colour)) +
labs(x="Week",y="percent positives", title="Training data of Flu")+
scale_colour_discrete("2009")
x1 <- seq(min(x), max(x), 10)
unique(train$WEEK)
x1 <- c(10,20,30,40,50)
x2 <- seq(1,53,3)
sp1 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x1), data = train)
install.packages("splines")
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(viridis))
library(splines)
x1 <- c(10,20,30,40,50)
x2 <- seq(1,53,3)
sp1 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x1), data = train)
summary(sp1)
sp2 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x2), data = train)
summary(sp2)
x2
sp1 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x1), data = train)
summary(sp1)
sp2 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x2), data = train)
summary(sp2)
x1
x2
x1 <- c(1,53,5)
x2 <- seq(1,53,3)
sp1 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x1), data = train)
summary(sp1)
sp2 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x2), data = train)
summary(sp2)
x1 <- seq(1,53,5)
x2 <- seq(1,53,3)
sp1 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x1), data = train)
summary(sp1)
sp2 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x2), data = train)
summary(sp2)
x1 <- c(10,20,30,40,50)
x2 <- c(15,30,45)
sp1 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x1), data = train)
summary(sp1)
sp2 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x2), data = train)
summary(sp2)
knitr::opts_chunk$set(fig.width=5, fig.height=3, fig.align="center")
library(splines)
x2 <- ns(x, knots=c(-2, 0, 2))
library(ggplot2)
x <- rnorm(1000)
y <- x^2 + rnorm(1000)
qplot(x, y, alpha=I(0.5)) + theme_bw()
library(splines)
x2 <- ns(x, knots=c(-2, 0, 2))
fit <- lm(y ~ x2)
qplot(x, y, alpha=I(0.5)) +
geom_line(data=data.frame(x=x, y=predict(fit)),
mapping=aes(x, y), colour="blue") +
theme_bw()
fit <- lm(y ~ x2)
summary(fit)
qplot(x, y, alpha=I(0.5)) +
geom_line(data=data.frame(x=x, y=predict(fit)),
mapping=aes(x, y), colour="blue") +
theme_bw()
x1 <- seq(min(x), max(x), 10)
x2 <-seq(min(x), max(x), 15)
sp1 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x1), data = train)
summary(sp1)
sp2 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x2), data = train)
summary(sp2)
train <- read.csv("./data/flu-train.csv")
test <- read.csv("./data/flu-test.csv")
train%>%
mutate(colour=YEAR=="2009")%>%
ggplot(aes(WEEK,PERCENT_POSITIVES))+
geom_line(aes(group=YEAR,color = colour)) +
labs(x="Week",y="percent positives", title="Training data of Flu")+
scale_colour_discrete("2009")
x1 <- seq(min(x), max(x), 10)
x2 <-seq(min(x), max(x), 15)
sp1 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x1), data = train)
summary(sp1)
sp2 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x2), data = train)
summary(sp2)
x1 <- seq(min(x), max(x), 10)
x2 <-seq(min(x), max(x), 15)
sp1 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x1), data = train)
summary(sp1)
sp2 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x2), data = train)
summary(sp2)
ggplot(train, aes(WEEK, PERCENT_POSITIVES)) +
geom_line(aes(group=YEAR)) +
geom_line(data=data.frame(x=x, y=predict(fit1)), mapping=aes(x, y, color="blue")) +
geom_line(data=data.frame(x=x, y=predict(fit2)), mapping = aes(x, y, color="red")) +
labs(x="Week",y="percent positives", title="spline plot of Training data of Flu")+
scale_color_manual(name = "", values=c("lc1"="red","lc2"="blue"),
labels = c("6 knots","11 knots"))
ggplot(train, aes(WEEK, PERCENT_POSITIVES)) +
geom_line(aes(group=YEAR)) +
geom_line(data=data.frame(x=x, y=predict(sp1)), mapping=aes(x, y, color="blue")) +
geom_line(data=data.frame(x=x, y=predict(sp2)), mapping = aes(x, y, color="red")) +
labs(x="Week",y="percent positives", title="spline plot of Training data of Flu")+
scale_color_manual(name = "", values=c("lc1"="red","lc2"="blue"),
labels = c("6 knots","11 knots"))
x1 <- seq(1, 53, 10)
x2 <-seq(1, 53, 15)
sp1 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x1), data = train)
summary(sp1)
sp2 <- lm(PERCENT_POSITIVES ~ ns(WEEK, x2), data = train)
summary(sp2)
